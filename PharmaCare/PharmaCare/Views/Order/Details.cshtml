@model PharmaCare.Models.Order

@{
    ViewData["Title"] = "Order Details";

    Layout = "~/Views/Shared/_FrontendLayout.cshtml";
    /* Determine if current user has admin privileges for status updates */
    bool isAdmin = ViewBag.UserRole == "Admin";

    ViewBag.IsLoggedIn = true;

    /* Extract username from session with fallback */
    var userName = Context.Session.GetString("UserName");
    ViewBag.UserName = !string.IsNullOrEmpty(userName) ? userName : "User";

    /* Show categories navigation on this page */
    ViewBag.HideCategories = false;
}

<!-- Page header with breadcrumb navigation -->
<div class="bg-light py-3">
    <div class="container">
        <div class="row">
            <div class="col-md-12 mb-0">
                <strong class="text-black">Order Details</strong>
            </div>
        </div>
    </div>
</div>

<div class="site-section">
    <div class="container">
        <!-- Success message display for completed operations -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        <!-- Error message display for failed operations -->
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="row mb-5">
            <div class="col-md-12">
                <!-- Main order details card with comprehensive information -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <!-- Order number display -->
                        <h4 class="m-0">Order #@Model.OrderNumber</h4>

                        <!-- Admin-only status update button -->
                        @if (isAdmin)
                        {
                            <button type="button" class="btn btn-danger btn-sm no-hover-effect" data-toggle="modal" data-target="#updateStatusModal">
                                <i class="fas fa-edit"></i> Update Status
                            </button>
                        }
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <!-- Left column: Order and payment information -->
                            <div class="col-md-6">
                                <h5>Order Information</h5>
                                <!-- Order creation date -->
                                <p><strong>Order Date:</strong> @Model.OrderDate.ToString("MMMM dd, yyyy")</p>

                                <!-- Dynamic status badge with conditional styling -->
                                <p>
                                    <strong>Status:</strong>
                                    @{
                                        /* Status badge color mapping for visual clarity */
                                        var statusClass = Model.Status.ToLower() switch
                                        {
                                            "pending" => "warning",
                                            "processing" => "info",
                                            "shipped" => "primary",
                                            "delivered" => "success",
                                            "cancelled" => "danger",
                                            _ => "secondary"
                                        };
                                    }
                                    <span class="badge badge-@statusClass">@Model.Status</span>
                                </p>

                                <!-- Payment information -->
                                <p><strong>Payment Method:</strong> @Model.PaymentMethod</p>
                                <p><strong>Payment Status:</strong> @(Model.IsPaid ? "Paid" : "Not Paid")</p>

                                <!-- Conditional payment date display -->
                                @if (Model.PaidAt.HasValue)
                                {
                                    <p><strong>Paid At:</strong> @Model.PaidAt.Value.ToString("MMMM dd, yyyy")</p>
                                }

                                <!-- Conditional delivery date display -->
                                @if (Model.DeliveredAt.HasValue)
                                {
                                    <p><strong>Delivered At:</strong> @Model.DeliveredAt.Value.ToString("MMMM dd, yyyy")</p>
                                }
                            </div>

                            <!-- Right column: Customer and shipping information -->
                            <div class="col-md-6">
                                <h5>Customer Information</h5>
                                <p><strong>Name:</strong> @Model.User.FirstName @Model.User.LastName</p>
                                <p><strong>Email:</strong> @Model.User.Email</p>
                                <p><strong>Phone:</strong> @Model.PhoneNumber</p>

                                <h5 class="mt-4">Shipping Information</h5>
                                <p><strong>Address:</strong> @Model.ShippingAddress</p>
                                <p><strong>City:</strong> @Model.City</p>
                            </div>
                        </div>

                        <!-- Order items section with detailed breakdown -->
                        <h5 class="mt-4">Order Items</h5>
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Product</th>
                                        <th>Quantity</th>
                                        <th>Price</th>
                                        <th>Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Dynamic order items display -->
                                    @foreach (var item in Model.OrderItems)
                                    {
                                        <tr>
                                            <td>@item.ProductName</td>
                                            <td>@item.Quantity</td>
                                            <td>$@item.Price.ToString("0.00")</td>
                                            <td>$@((item.Price * item.Quantity).ToString("0.00"))</td>
                                        </tr>
                                    }
                                </tbody>
                                <tfoot>
                                    <!-- Order totals calculation and display with tax and shipping logic -->
                                    <tr>
                                        <th colspan="3" class="text-right">Subtotal:</th>
                                        <!-- Calculate subtotal by removing tax (5%) and shipping ($5.99 if under $50) -->
                                        <td>$@((Model.TotalAmount - (Model.TotalAmount * 0.05m) - (Model.TotalAmount > 50 ? 0 : 5.99m)).ToString("0.00"))</td>
                                    </tr>
                                    <tr>
                                        <th colspan="3" class="text-right">Tax (5%):</th>
                                        <td>$@((Model.TotalAmount * 0.05m).ToString("0.00"))</td>
                                    </tr>
                                    <tr>
                                        <th colspan="3" class="text-right">Shipping:</th>
                                        <!-- Free shipping for orders over $50, otherwise $5.99 -->
                                        <td>$@((Model.TotalAmount > 50 ? 0 : 5.99m).ToString("0.00"))</td>
                                    </tr>
                                    <tr>
                                        <th colspan="3" class="text-right">Total:</th>
                                        <td>$@Model.TotalAmount.ToString("0.00")</td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>

                        <!-- Navigation back to orders list -->
                        <div class="text-right mt-4">
                            <a href="@Url.Action("Index", "Order")" class="btn btn-secondary no-hover-effect">
                                <i class="fas fa-arrow-left"></i> Back to My Orders
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Admin-only status update modal -->
@if (isAdmin)
{
    <div class="modal fade" id="updateStatusModal" tabindex="-1" role="dialog" aria-labelledby="updateStatusModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="updateStatusModalLabel">Update Order Status</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <!-- Status update form with CSRF protection -->
                <form asp-controller="Order" asp-action="UpdateStatus" method="post">
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <!-- Hidden field to identify the order being updated -->
                        <input type="hidden" name="orderId" value="@Model.OrderId">
                        <div class="form-group">
                            <label for="orderStatus">Status</label>
                            <!-- Status selection dropdown with current status pre-selected -->
                            <select id="orderStatus" name="status" class="form-control">
                                <option value="Pending" asp-selected="@(Model.Status == "Pending")">Pending</option>
                                <option value="Processing" asp-selected="@(Model.Status == "Processing")">Processing</option>
                                <option value="Shipped" asp-selected="@(Model.Status == "Shipped")">Shipped</option>
                                <option value="Delivered" asp-selected="@(Model.Status == "Delivered")">Delivered</option>
                                <option value="Cancelled" asp-selected="@(Model.Status == "Cancelled")">Cancelled</option>
                            </select>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary no-hover-effect" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-danger no-hover-effect">Update Status</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
}