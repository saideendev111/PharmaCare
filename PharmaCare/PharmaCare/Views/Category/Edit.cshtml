@model PharmaCare.Models.Category

@{
    ViewData["Title"] = "Edit Category";
    Layout = "~/Views/Shared/_Adminlayout.cshtml";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2 page-title">Edit Category</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group mr-2">
            <!-- Back navigation to category index -->
            <a href="@Url.Action("Index", "Category")" class="btn btn-sm btn-outline-secondary">
                <i class="fas fa-arrow-left"></i> Back to List
            </a>
        </div>
    </div>
</div>

<div class="row">
    <!-- Edit form column -->
    <div class="col-lg-8">
        <div class="card shadow-sm mb-4">
            <div class="card-header">
                <h5 class="m-0 font-weight-bold">Category Information</h5>
            </div>
            <div class="card-body">
                <!-- Form with ASP.NET Core tag helpers -->
                <form asp-action="Edit">
                    <!-- Display model-only validation errors -->
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <!-- Hidden field to preserve CategoryID during form submission -->
                    <input type="hidden" asp-for="CategoryID" />

                    <div class="form-group">
                        <label asp-for="CategoryName" class="control-label">Category Name</label>
                        <!-- Input bound to CategoryName property -->
                        <input asp-for="CategoryName" class="form-control" />
                        <!-- Client-side validation span -->
                        <span asp-validation-for="CategoryName" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <!-- Submit button with inline styling for brand colors -->
                        <button type="submit" class="btn btn-primary" style="background-color: #dc3545 !important; border-color: #dc3545 !important; color: white !important;">
                            <i class="fas fa-save"></i> Save Changes
                        </button>
                        <!-- Cancel link returning to index -->
                        <a asp-action="Index" class="btn btn-outline-secondary ml-2">Cancel</a>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Help and information sidebar -->
    <div class="col-lg-4">
        <div class="card shadow-sm mb-4">
            <div class="card-header">
                <h5 class="m-0 font-weight-bold">Help</h5>
            </div>
            <div class="p-3">
                <p><strong>Category Name:</strong> Enter a descriptive name for the category. This name will be displayed to customers and used for organizing products.</p>
                <hr>
                <p>Categories help organize your products and make it easier for customers to find what they're looking for.</p>
                <div class="mt-3">
                    <h6>Recommendations</h6>
                    <!-- Unordered list with recommendations -->
                    <ul>
                        <li>Keep category names short and clear</li>
                        <li>Use common search terms in category names</li>
                        <li>Avoid duplicate categories</li>
                        <li>Plan your category structure carefully</li>
                        <li>Use meaningful names that describe the product types</li>
                    </ul>
                </div>

                <!-- Conditional alert for categories with associated products -->
                @if (Model.Products?.Count > 0)
                {
                    <div class="alert alert-info mt-3">
                        <i class="fas fa-info-circle mr-2"></i> This category has @Model.Products.Count associated products.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        /* Render client-side validation scripts for form validation */
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}